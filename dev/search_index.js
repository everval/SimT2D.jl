var documenterSearchIndex = {"docs":
[{"location":"#SimT2D","page":"Home","title":"SimT2D","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SimT2D.","category":"page"},{"location":"","page":"Home","title":"Home","text":"SimT2D (Simulate-Type-2-Diabetes) is a Julia-based framework for generating realistic synthetic continuous glucose monitoring (CGM) data for individuals with type 2 diabetes (T2D).   It is designed for research, algorithm validation, and machine learning workflows that require clinically plausible glucose time series with event annotations.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Multi-day CGM traces with 5-minute resolution  \nBehavioral and physiological event modeling:  \nMeals & snacks with realistic postprandial excursions  \nExercise-induced glucose dips  \nMild & severe nocturnal hypoglycemia  \nRandom spikes and dips (unexplained anomalies)  \nCircadian delay modulation of meal responses  \nAutoregulatory drift toward baseline and CGM-like sensor noise  \nEvent logs for validation, plotting, and ML training  ","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SimT2D is registered in the Julia General Registry and can be installed via Julia's package manager.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"SimT2D\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Once installed, you can use SimT2D to generate synthetic CGM data. Below is a simple example of how to simulate glucose traces for a single subject.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using SimT2D\n\nsubject, event = generate_T2D_data(1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This will generate a DataFrame subject containing the CGM glucose values and a DataFrame event with the corresponding event annotations.  More subjects can be simulated by changing the input argument to generate_T2D_data(), e.g., generate_T2D_data(10) for 10 subjects.","category":"page"},{"location":"#Author","page":"Home","title":"Author","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Tanja Kortsen Bugajski   Department of Mathematical Sciences, Aalborg University, Denmark   ðŸ“§ tbugaj17@student.aau.dk","category":"page"},{"location":"#Contributors","page":"Home","title":"Contributors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Tanja Kortsen Bugajski â€” Creator & primary developer\nJ. Eduardo Vera-ValdÃ©s â€” Advisor & co-developer","category":"page"},{"location":"#Roadmap","page":"Home","title":"Roadmap","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Planned features and improvements include:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Enhanced physiological modeling (e.g., insulin dynamics)\nMore diverse event types and patterns\nUser-defined event scheduling\nImproved documentation and tutorials","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use this code in your work, please cite:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Bugajski T K, Vera-ValdÃ©s J. E. SimT2D: A Stochastic Behavioralâ€“Physiological Simulator for Type 2 Diabetes Glucose Traces. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#SimT2D.cgm_delay_kernel","page":"Home","title":"SimT2D.cgm_delay_kernel","text":"Kernel function modeling delayed CGM glucose response.\n\nThis function returns the glucose impact at time t due to an input stimulus  (e.g., carbohydrate intake or exercise) after a specified physiological delay. The response follows a gamma-like rise and exponential decay pattern.\n\nArguments\n\nt::Int: Time (in minutes) since the event was triggered.\ndelay::Real: Onset delay before response begins (in minutes).\ntau::Real: Time constant governing the width of the response.\npeak::Real: Maximum effect size (scales total magnitude).\ngain::Real=1.0: Optional additional scaling factor (default 1.0).\n\nReturns\n\nFloat64: Glucose impact at time t. Zero if t < delay.\n\nNotes\n\nThe kernel is of the form: gain Ã— peak Ã— ((t-delay)/Ï„)^Î³ Ã— exp(-Î±(t-delay)/Ï„)\nGlobal constants gamma and alpha define the response shape.\n\n\n\n\n\n","category":"function"},{"location":"#SimT2D.circadian_delay-Tuple{Int64}","page":"Home","title":"SimT2D.circadian_delay","text":"Circadian delay function to model daily glucose variability.\n\nSimulates the circadian rhythmâ€™s effect on glucose response delay, modeled by a cosine-modulated baseline with Gaussian noise. Delay is longer or shorter depending  on time of day, peaking in early morning and reaching minimum in late afternoon.\n\nArguments\n\nt::Int: Time in minutes since midnight (range: 0 to 1439).\n\nReturns\n\nInt: Circadian delay in minutes, clamped between 8 and 30.\n\n\n\n\n\n","category":"method"},{"location":"#SimT2D.generate_T2D_data","page":"Home","title":"SimT2D.generate_T2D_data","text":"Generate synthetic CGM data for multiple subjects. This function simulates CGM data for N subjects by calling simulate_cgm_t2d\n\nInputs:\n\nN::Int=30: Number of subjects to simulate (default 30).\n\nOutputs:\n\nDataFrame: Combined glucose time series for all subjects.\nDataFrame: Combined event log for all subjects.\n\n\n\n\n\n","category":"function"},{"location":"#SimT2D.simulate_cgm_t2d-Tuple{}","page":"Home","title":"SimT2D.simulate_cgm_t2d","text":"Simulate continuous glucose monitoring (CGM) data for a synthetic T2D subject.\n\nArguments\n\ndays::Int=90: Number of days to simulate (default 90).\nbaseline::Float64=135.0: Baseline glucose level in mg/dL (default 135).\nnoise_std::Float64=10.0: Standard deviation of sensor noise (default 10).\nrng::AbstractRNG=Random.GLOBAL_RNG: Random number generator (default global RNG).\n\nReturns\n\nDataFrame: 5-minute sampled glucose time series with timestamps.\nDataFrame: Event log with timestamps and event types (meals, snacks, exercise, etc.).\n\nNotes\n\nThe simulation includes meal responses, exercise effects, nocturnal hypoglycemia,  and random glucose anomalies.\nGlucose values are adjusted for physiological drift and sensor noise.\n\n\n\n\n\n","category":"method"}]
}
